<?xml version="1.0"?>
<root>
<!-- Author: TheThingGoesSkra -->
  <Configuration>
                <I3-I3gaps-I3Blocks-Compton-Feh-Rofi-Morc-Wtf-Mc>
                        <cmd>apt-get install -y i3 i3blocks lxappearance libxcb-keysyms1-dev libpango1.0-dev libxcb-util0-dev xcb libxcb1-dev libxcb-icccm4-dev libyajl-dev libev-dev libxcb-xkb-dev libxcb-shape0-dev libxcb-cursor-dev libxkbcommon-dev libxcb-xinerama0-dev libxkbcommon-x11-dev libstartup-notification0-dev libxcb-randr0-dev libxcb-xrm0 libxcb-xrm-dev build-essential autoconf pkg-config;mkdir /home/$SUDO_USER/GUI;cd /home/$SUDO_USER/GUI;git clone https://www.github.com/Airblader/i3 i3-gaps; cd i3-gaps;autoreconf --force --install;rm -rf build;mkdir -p build; cd build;../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers;make -j8;make install; apt-get install feh compton mc rofi; cd /home/$SUDO_USER/.config; rm -rf i3; git clone http://github.com/thethinggoesskra/i3_config i3;git clone http://github.com/thethinggoesskra/i3blocks_config i3blocks; rm -rf gtk-3.0; git clone http://github.com/thethinggoesskra/gtk3_theme gtk-3.0; git clone https://github.com/TheThingGoesSkra/wtf_config wtf; git clone https://github.com/TheThingGoesSkra/rofi_config rofi; cd /home/$SUDO_USER/GUI; git clone http://github.com/thethinggoesskra/Wallpapers; git clone https://github.com/Boruch-Baum/morc_menu.git;cd morc_menu;sudo make install;cd /home/$SUDO_USER/GUI;wget https://github.com/wtfutil/wtf/releases/download/v0.25.0/wtf_0.25.0_linux_386.tar.gz;tar xvzf wtf_0.25.0_linux_386.tar.gz;rm wtf_0.25.0_linux_386.tar.gz;cd /home/$SUDO_USER/GUI/wtf_0.25.0_linux_386/;chmod a+x /home/$SUDO_USER/GUI/wtf_0.25.0_linux_386/wtfutil;cp /home/$SUDO_USER/GUI/wtf_0.25.0_linux_386/wtfutil /usr/local/bin;</cmd>
                </I3-I3gaps-I3Blocks-Compton-Feh-Rofi-Morc-Wtf-Mc>
                <Bashrc-Pureline-Powerline>
                        <cmd>cd /home/$SUDO_USER;git init;git remote add origin https://github.com/TheThingGoesSkra/Bash_config.git;rm .bashrc;git pull origin master;mkdir /home/$SUDO_USER/.font;cd /home/$SUDO_USER/.font;wget https://github.com/supermarin/YosemiteSanFranciscoFont/blob/master/System%20San%20Francisco%20Display%20Regular.ttf?raw=true -O /home/$SUDO_USER/.font/System\ San\ Francisco\ Display\ Regular.ttf;pip install powerline-status;mkdir /home/$SUDO_USER/.local/share/fonts;cd /home/$SUDO_USER/.local/share/fonts;wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf;fc-cache -vf /home/$SUDO_USER/.local/share/fonts/;mkdir /home/$SUDO_USER/.config/fontconfig;mkdir /home/$SUDO_USER/.config/fontconfig/conf.d; apt-get install vim-gtk;export TERM=”screen-256color”;git clone https://github.com/thethinggoesskra/vim_config /home/$SUDO_USER/.vim;</cmd>
                </Bashrc-Pureline-Powerline>
                <System>
                        <cmd>echo "vm.swappiness=10" >> /etc/sysctl.conf;sed -i -e 's/\(GRUB_TIMEOUT=\).*/\10/' /etc/default/grub;echo OK;</cmd>
                </System>
                <Fireburp>
                        <cmd>firefox --headless &amp; export APP_PID=$!;sleep 5;sudo kill -SIGTERM $APP_PID; echo "y" | java -Djava.awt.headless=true -Xmx1g -jar /bin/burpsuite &amp; export APP_PID=$!; sleep 35;wget -e use_proxy=yes -e http_proxy=http://127.0.0.1:8080 http://burp/cert -O cacert.der;sleep 5;sudo kill -SIGTERM $APP_PID;firefox --no-remote -CreateProfile proxy;folder=$(find /home/$SUDO_USER/.mozilla/firefox/ -maxdepth 1 -type d -name '*.proxy' -print -quit);certutil -A -n Burp -t "CT,c,c" -d "${folder}" -i cacert.der;cat prefs.js.old > "$folder/prefs.js";sudo openssl x509 -in cacert.der -inform DER -out burp.crt;sudo cp burp.crt /usr/local/share/ca-certificates/burp.crt;update-ca-certificates;</cmd>
                </Fireburp>
        </Configuration>

        <Environnement>
                <Fish>
                        <cmd>echo "y" | apt-get install fish; chsh -s /usr/bin/fish; git clone https://github.com/TheThingGoesSkra/Fish_config /home/$SUDO_USER/.config/fish; curl -L https://get.oh-my.fish --output install; su -c "xfce4-terminal -e \"fish -c 'fish install'\"" $SUDO_USER;export APP_PID=$!;sleep 15; pkill -SIGTERM fish; cd /home/$SUDO_USER/.local/share/omf;rm -rf themes;git clone https://github.com/TheThingGoesSkra/Omf_themes themes; ln /home/$SUDO_USER/.local/share/omf/themes/agnoster/fish_prompt.fish /home/$SUDO_USER/.config/fish/functions/fish_prompt.fish;cd $PWD_START;</cmd>
                </Fish>
                <Terminator>
                        <cmd>echo "deb http://http.kali.org/kali kali main" >> /etc/apt/sources.list;apt-get update; echo "y" | apt-get install terminator; dconf write /org/gnome/shell/favorite-apps "['org.gnome.Nautilus.desktop', 'terminator.desktop', 'firefox-esr.desktop', 'org.gnome.gedit.desktop', 'kali-msfconsole.desktop', 'kali-burpsuite.desktop', 'zenmap-root.desktop', 'cherrytree.desktop']"; git clone https://github.com/TheThingGoesSkra/Terminator_config /home/$SUDO_USER/.config/terminator;</cmd>
                </Terminator>
                <Atom>
                        <cmd>wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -; sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list';sudo apt-get update;echo 'Y' | sudo apt-get install atom;cd $PWD_START;</cmd>
                </Atom>
        </Environnement>

  <Firefox>
                <hackbar>
                        <cmd>wget https://addons.mozilla.org/firefox/downloads/file/3398269/max_hackbar-4.7-fx.xpi;</cmd>
                </hackbar>
                <http-request-maker>
                        <cmd>wget https://addons.mozilla.org/firefox/downloads/file/3360387/http_request_maker-1.3-fx.xpi;</cmd>
                </http-request-maker>
                <wappalyzer>
                        <cmd>wget  https://addons.mozilla.org/firefox/downloads/file/3477702/wappalyzer-5.9.0-fx.xpi;</cmd>
                </wappalyzer>
        </Firefox>

        <Resources>
                <SecLists>
                        <cmd>git clone https://github.com/danielmiessler/SecLists /opt/resources/seclists;cd $PWD_START;</cmd>
                </SecLists>
                <Malwares-samples>
                        <cmd>git clone https://github.com/fabrimagic72/malware-samples /opt/resources/malwares;cd $PWD_START;</cmd>
                </Malwares-samples>
        </Resources>

        <Windows>
                <Impacket>
                        <cmd>git clone https://github.com/SecureAuthCorp/impacket /opt/windows/impacket;cd $PWD_START;</cmd>
                </Impacket>
                <Bloodhound>
                        <cmd>git clone https://github.com/adaptivethreat/Bloodhound /opt/windows/bloodhound; curl -sL https://deb.nodesource.com/setup_13.x | bash -; export APP_PID=$!; wait $APP_PID; apt-get install -y nodejs; npm install -g electron-packager; cd /opt/windows/bloodhound; npm install; npm install; npm run linuxbuild; cd /opt/windows; wget https://neo4j.com/artifact.php?name=neo4j-community-3.5.12-unix.tar.gz -O neo4j-community-3.5.12-unix.tar.gz; tar -xzf neo4j-community-3.5.12-unix.tar.gz; rm neo4j-community-3.5.12-unix.tar.gz;cd $PWD_START;</cmd>
                </Bloodhound>
                <Sysinternal>
                        <cmd>cd /opt/windows; mkdir sysinternalssuite; wget https://download.sysinternals.com/files/SysinternalsSuite.zip; mv SysinternalsSuite.zip sysinternalssuite; cd sysinternalssuite; unzip SysinternalsSuite.zip;cd $PWD_START;</cmd>
                </Sysinternal>
                <MremoteNG-Decrypt>
                        <cmd>cd /opt/windows; git clone https://github.com/haseebT/mRemoteNG-Decrypt mremoteng-decrypt; cd mremoteng-decrypt; pip install pyinstaller; pyinstaller mremoteng_decrypt.py; pip install pycryptodome; pip install pycryptodomex;cd $PWD_START;</cmd>
                </MremoteNG-Decrypt>
                <Evil-Winrm>
                        <cmd>gem install evil-winrm;cd $PWD_START;</cmd>
                </Evil-Winrm>
        </Windows>


        <Linux>
                <Pspy>
                        <cmd>cd /opt/linux; mkdir pspy; cd pspy; wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64; wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy32;cd $PWD_START;</cmd>
                </Pspy>
                <linEnum>
                        <cmd>git clone https://github.com/rebootuser/LinEnum /opt/linux/linenum;cd $PWD_START;</cmd>
                </linEnum>
        </Linux>


        <Web>
                <Kadimus>
                        <cmd>cd /opt/web; git clone https://github.com/P0cL4bs/Kadimus; cd Kadimus; echo "Y" | apt-get install libcurl4-openssl-dev libpcre++-dev; apt-get instibpcre++-dev; echo "Y" | apt-get install libssh-dev; make;cd $PWD_START;</cmd>
                </Kadimus>
                <phpBash>
                        <cmd>git clone https://github.com/Arrexel/phpbash /opt/web/phpbash;</cmd>
                </phpBash>
                <p0wny-shell>
                        <cmd>git clone https://github.com/flozz/p0wny-shell /opt/web/p0wny-shell;</cmd>
                </p0wny-shell>
                <wwwolf-php-webshell>
                        <cmd>git clone https://github.com/WhiteWinterWolf/wwwolf-php-webshell /opt/web/wwwolf-php-webshell;</cmd>
                </wwwolf-php-webshell>
                <Wall6e-Web-Scripts>
                        <cmd>git clone https://github.com/TheThingGoesSkra/Wall6e-Web-Scripts /opt/web/Wall6e-web-scripts;</cmd>
                </Wall6e-Web-Scripts>
                <Ffuf>
                        <cmd>go get github.com/ffuf/ffuf;echo OK;</cmd>
                </Ffuf>
        </Web>


        <Cracking>
                <Hexedit>
                        <cmd>apt-get install hexedit;cd $PWD_START;</cmd>
                </Hexedit>
                <Cisco_pwdecrypt>
                        <cmd>git clone https://github.com/axcheron/cisco_pwdecrypt /opt/cracking/cisco_pwdecrypt;cd $PWD_START;</cmd>
                </Cisco_pwdecrypt>
                <Pdfcrack>
                        <cmd>apt-get install pdfcrack;</cmd>
                </Pdfcrack>
                <Fcrackzip>
                        <cmd>apt-get install fcrackzip;</cmd>
                </Fcrackzip>
                <Steghide>
                        <cmd>echo "Y" | apt-get install steghide;</cmd>
                </Steghide>
        </Cracking>


        <Reverse>
                <Ropper>
                        <cmd>pip install ropper;cd $PWD_START;</cmd>
                </Ropper>
                <Hopper>
                        <cmd>curl https://d2ap6ypl1xbe4k.cloudfront.net/Hopper-v4-4.5.19-Linux.deb --output Hopper-v4-4.5.19-Linux.deb; dpkg -i Hopper-v4-4.5.19-Linux.deb; rm Hopper-v4-4.5.19-Linux.deb;</cmd>
                </Hopper>
                <Gdb-peda>
                        <cmd>git clone https://github.com/longld/peda.git /opt/reverse/peda; echo "source /opt/reverse/peda/peda.py" >> /home/$SUDO_USER/.gdbinit;cd $PWD_START;</cmd>
                </Gdb-peda>
        </Reverse>


        <Blockchain>
                <Rpc-check>
                        <cmd>npm install rpc-check -g;cd $PWD_START;</cmd>
                </Rpc-check>
        </Blockchain>


        <osint>
        </osint>

</root>

